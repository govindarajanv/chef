::Chef::Resource::PowershellScript.send(:include, Chef::Mixin::PowershellOut)
command_str="(Get-WmiObject -Class Win32_Product | Where-Object { $_.Name -eq 'Adobe AIR'}).Version" 
powershell_script'set old version' do
	code <<-EOH
	$oldVersion=(Get-WmiObject -Class Win32_Product | Where-Object { $_.Name -eq "Adobe AIR"}).Version
	EOH
	script = <<-EOH
	  echo Hello
	EOH
	oldVersion = powershell_out(command_str).stdout
	puts " "
	print "Old Version of the package is:"
	puts (oldVersion)
	puts " "
	node.run_state['oldVersion'] = oldVersion
end


powershell_script 'set new version' do
	code <<-EOH
	$newVersion='1.1.2'
	$newVersion
	EOH
	puts " "
	newVersion='1.1.2'
	print "New Version of the package is:"
	print (newVersion)
	puts " "
	node.run_state['newVersion'] = newVersion
end
execute 'checking versions' do
	command "dir"
	guard_interpreter :powershell_script
	puts (node.run_state['oldVersion'])
	puts (node.run_state['newVersion'])
	only_if (lazy { node.run_state['oldVersion'] } != lazy { node.run_state['newVersion']})
end
